<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        F9H6oD//2Q==
</value>
  </data>
</root>